i-regexp = branch *("|" branch)
branch = *piece
piece = atom [quantifier]
quantifier = ("*" / "+" / "?") / range-quantifier
range-quantifier = "{" QuantExact ["," [QuantExact]] "}"
QuantExact = 1*%x30-39
atom = NormalChar / charClass / ("(" i-regexp ")")
NormalChar = (%x0-27 / "," / "-" / %x2f-3e / %x40-5a / %x5e-7a / %x7e-d7ff / %xe000-ffff / %xd800-dbff %xdc00-dfff)
charClass = "." / SingleCharEsc / charClassEsc / charClassExpr
SingleCharEsc = "\" (%x28-2b / "-" / "." / "?" / %x5b-5e / "n" / "r" / "t" / %x7b-7d)
charClassEsc = catEsc / complEsc
charClassExpr = "[" ["^"] ("-" / CCE1) *CCE1 ["-"] "]"
CCE1 = (CCchar ["-" CCchar]) / charClassEsc
CCchar = (%x0-2c / %x2e-5a / %x5e-d7ff / %xe000-ffff / %xd800-dbff %xdc00-dfff) / SingleCharEsc
catEsc = "\p{" charProp "}"
complEsc = "\P{" charProp "}"
charProp = IsCategory
IsCategory = Letters / Marks / Numbers / Punctuation / Separators / Symbols / Others
Letters = "L" [("l" / "m" / "o" / "t" / "u")]
Marks = "M" [("c" / "e" / "n")]
Numbers = "N" [("d" / "l" / "o")]
Punctuation = "P" [(%x63-66 / "i" / "o" / "s")]
Separators = "Z" [("l" / "p" / "s")]
Symbols = "S" [("c" / "k" / "m" / "o")]
Others = "C" [("c" / "f" / "n" / "o")]