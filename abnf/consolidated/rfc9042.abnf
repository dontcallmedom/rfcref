addr-adl = nstring
addr-host = nstring
addr-mailbox = nstring
addr-name = nstring
address = "(" addr-name SP addr-adl SP addr-mailbox SP addr-host ")"
astring = 1*ASTRING-CHAR / rfc3501-STRING
ASTRING-CHAR = ATOM-CHAR / resp-specials
atom = 1*ATOM-CHAR
ATOM-CHAR = <any CHAR except atom-specials>
auth-type = atom
body = "(" (body-type-1part / body-type-mpart) ")"
body-ext-1part = body-fld-md5 [SP body-fld-dsp [SP body-fld-lang [SP body-fld-loc *(SP body-extension)]]]
body-ext-mpart = body-fld-param [SP body-fld-dsp [SP body-fld-lang [SP body-fld-loc *(SP body-extension)]]]
body-extension = nstring / number / "(" body-extension *(SP body-extension) ")"
body-fields = body-fld-param SP body-fld-id SP body-fld-desc SP body-fld-enc SP body-fld-octets
body-fld-desc = nstring
body-fld-dsp = "(" rfc3501-STRING SP body-fld-param ")" / nil
body-fld-enc = (DQUOTE ("7BIT" / "8BIT" / "BINARY" / "BASE64" / "QUOTED-PRINTABLE") DQUOTE) / rfc3501-STRING
body-fld-id = nstring
body-fld-lang = nstring / "(" rfc3501-STRING *(SP rfc3501-STRING) ")"
body-fld-lines = number
body-fld-loc = nstring
body-fld-md5 = nstring
body-fld-octets = number
body-fld-param = "(" rfc3501-STRING SP rfc3501-STRING *(SP rfc3501-STRING SP rfc3501-STRING) ")" / nil
body-type-1part = (body-type-basic / body-type-msg / body-type-text) [SP body-ext-1part]
body-type-basic = media-basic SP body-fields
body-type-mpart = 1*body SP media-subtype [SP body-ext-mpart]
body-type-msg = media-message SP body-fields SP envelope SP body SP body-fld-lines
body-type-text = media-text SP body-fields SP body-fld-lines
capability = ("AUTH=" auth-type) / atom / "OBJECTID"
capability-data = "CAPABILITY" *(SP capability) SP "IMAP4rev1" *(SP capability)
CHAR8 = %x1-ff
date = date-text / DQUOTE date-text DQUOTE
date-day = 1*2DIGIT
date-day-fixed = (SP DIGIT) / 2DIGIT
date-month = "Jan" / "Feb" / "Mar" / "Apr" / "May" / "Jun" / "Jul" / "Aug" / "Sep" / "Oct" / "Nov" / "Dec"
date-text = date-day "-" date-month "-" date-year
date-time = DQUOTE date-day-fixed "-" date-month "-" date-year SP time SP zone DQUOTE
date-year = 4DIGIT
digit-nz = %x31-39
env-bcc = "(" 1*address ")" / nil
env-cc = "(" 1*address ")" / nil
env-date = nstring
env-from = "(" 1*address ")" / nil
env-in-reply-to = nstring
env-message-id = nstring
env-reply-to = "(" 1*address ")" / nil
env-sender = "(" 1*address ")" / nil
env-subject = nstring
env-to = "(" 1*address ")" / nil
envelope = "(" env-date SP env-subject SP env-from SP env-sender SP env-reply-to SP env-to SP env-cc SP env-bcc SP env-in-reply-to SP env-message-id ")"
fetch-att = "ENVELOPE" / "FLAGS" / "INTERNALDATE" / "RFC822" [".HEADER" / ".SIZE" / ".TEXT"] / "BODY" ["STRUCTURE"] / "UID" / "BODY" section ["<" number "." nz-number ">"] / "BODY.PEEK" section ["<" number "." nz-number ">"] / "EMAILID" / "THREADID"
flag = "\Answered" / "\Flagged" / "\Deleted" / "\Seen" / "\Draft" / flag-keyword / flag-extension
flag-extension = "\" atom
flag-keyword = atom
flag-perm = flag / "\*"
header-fld-name = astring
header-list = "(" header-fld-name *(SP header-fld-name) ")"
literal = "{" number "}" CRLF *CHAR8
media-basic = ((DQUOTE ("APPLICATION" / "AUDIO" / "IMAGE" / "MESSAGE" / "VIDEO") DQUOTE) / rfc3501-STRING) SP media-subtype
media-message = DQUOTE "MESSAGE" DQUOTE SP DQUOTE "RFC822" DQUOTE
media-subtype = rfc3501-STRING
media-text = DQUOTE "TEXT" DQUOTE SP media-subtype
msg-att-static = "ENVELOPE" SP envelope / "INTERNALDATE" SP date-time / "RFC822" [".HEADER" / ".TEXT"] SP nstring / "RFC822.SIZE" SP number / "BODY" ["STRUCTURE"] SP body / "BODY" section ["<" number ">"] SP nstring / "UID" SP uniqueid / fetch-emailid-resp / fetch-threadid-resp
nil = "NIL"
nstring = rfc3501-STRING / nil
number = 1*DIGIT
nz-number = digit-nz *DIGIT
quoted = DQUOTE *QUOTED-CHAR DQUOTE
QUOTED-CHAR = <any TEXT-CHAR except quoted-specials> / "\" quoted-specials
quoted-specials = DQUOTE / "\"
resp-specials = "]"
resp-text-code = "ALERT" / "BADCHARSET" [SP "(" astring *(SP astring) ")"] / capability-data / "PARSE" / "PERMANENTFLAGS" SP "(" [flag-perm *(SP flag-perm)] ")" / "READ-ONLY" / "READ-WRITE" / "TRYCREATE" / "UIDNEXT" SP nz-number / "UIDVALIDITY" SP nz-number / "UNSEEN" SP nz-number / atom [SP 1*<any TEXT-CHAR except "]">] / "MAILBOXID" SP "(" objectid ")"
search-key = "ALL" / "ANSWERED" / "BCC" SP astring / "BEFORE" SP date / "BODY" SP astring / "CC" SP astring / "DELETED" / "FLAGGED" / "FROM" SP astring / "KEYWORD" SP flag-keyword / "NEW" / "OLD" / "ON" SP date / "RECENT" / "SEEN" / "SINCE" SP date / "SUBJECT" SP astring / "TEXT" SP astring / "TO" SP astring / "UNANSWERED" / "UNDELETED" / "UNFLAGGED" / "UNKEYWORD" SP flag-keyword / "UNSEEN" / "DRAFT" / "HEADER" SP header-fld-name SP astring / "LARGER" SP number / "NOT" SP search-key / "OR" SP search-key SP search-key / "SENTBEFORE" SP date / "SENTON" SP date / "SENTSINCE" SP date / "SMALLER" SP number / "UID" SP sequence-set / "UNDRAFT" / sequence-set / "(" search-key *(SP search-key) ")" / "EMAILID" SP objectid / "THREADID" SP objectid
section = "[" [section-spec] "]"
section-msgtext = "HEADER" / "HEADER.FIELDS" [".NOT"] SP header-list / "TEXT"
section-part = nz-number *("." nz-number)
section-spec = section-msgtext / (section-part ["." section-text])
section-text = section-msgtext / "MIME"
seq-number = nz-number / "*"
seq-range = seq-number ":" seq-number
sequence-set = (seq-number / seq-range) *("," sequence-set)
status-att = "MESSAGES" / "RECENT" / "UIDNEXT" / "UIDVALIDITY" / "UNSEEN" / "MAILBOXID"
time = 2DIGIT ":" 2DIGIT ":" 2DIGIT
uniqueid = nz-number
zone = ("+" / "-") 4DIGIT
flag-fetch = flag / "\Recent"
flag-list = "(" [flag *(SP flag)] ")"
mailbox = "INBOX" / astring
mailbox-data = "FLAGS" SP flag-list / "LIST" SP mailbox-list / "LSUB" SP mailbox-list / "SEARCH" *(SP nz-number) / "STATUS" SP mailbox SP "(" [status-att-list] ")" / number SP "EXISTS" / number SP "RECENT" / Namespace-Response / esearch-response
mailbox-list = "(" [mbx-list-flags] ")" SP (DQUOTE QUOTED-CHAR DQUOTE / nil) SP mailbox
mbx-list-flags = *(mbx-list-oflag SP) mbx-list-sflag *(SP mbx-list-oflag) / mbx-list-oflag *(SP mbx-list-oflag)
mbx-list-oflag = "\Noinferiors" / flag-extension
mbx-list-sflag = "\Noselect" / "\Marked" / "\Unmarked"
message-data = nz-number SP ("EXPUNGE" / ("FETCH" SP msg-att))
msg-att = "(" (msg-att-dynamic / msg-att-static) *(SP (msg-att-dynamic / msg-att-static)) ")"
msg-att-dynamic = "FLAGS" SP "(" [flag-fetch *(SP flag-fetch)] ")"
resp-cond-bye = "BYE" SP resp-text
resp-cond-state = ("OK" / "NO" / "BAD") SP resp-text
resp-text = ["[" resp-text-code "]" SP] text
status-att-list = status-att SP number *(SP status-att SP number)
store-att-flags = (["+" / "-"] "FLAGS" [".SILENT"]) SP (flag-list / (flag *(SP flag)))
text = 1*TEXT-CHAR
TEXT-CHAR = <any CHAR except CR and LF>
status-att-val = ("MESSAGES" SP number) / ("RECENT" SP number) / ("UIDNEXT" SP nz-number) / ("UIDVALIDITY" SP nz-number) / ("UNSEEN" SP number) / "MAILBOXID" SP "(" objectid ")"
objectid = 1*255(ALPHA / DIGIT / "_" / "-")
rfc3501-STRING = quoted / literal
hash-comment = "#" *octet-not-crlf CRLF
multi-line = "text:" *(SP / HTAB) (hash-comment / CRLF) *(multiline-literal / multiline-dotstart) "." CRLF
multiline-dotstart = "." 1*octet-not-crlf CRLF
multiline-literal = [octet-not-period *octet-not-crlf] CRLF
octet-not-crlf = %x1-9 / %xb-c / %xe-ff
octet-not-period = %x1-9 / %xb-c / %xe-2d / %x2f-ff
octet-not-qspecial = %x1-9 / %xb-c / %xe-21 / %x23-5b / %x5d-ff
quoted-other = "\" octet-not-qspecial
quoted-safe = CRLF / octet-not-qspecial
quoted-special = "\" (DQUOTE / "\")
quoted-string = DQUOTE quoted-text DQUOTE
quoted-text = *(quoted-safe / quoted-special / quoted-other)
string = quoted-string / multi-line
string-list = "[" string *("," string) "]" / string
CREATE = ":create"
FCC-OPTS = CREATE / IMAP-FLAGS / SPECIAL-USE / MAILBOXID-OPT
IMAP-FLAGS = ":flags" string-list
SPECIAL-USE = ":specialuse" string
MAILBOXID-OPT = ":mailboxid" objectid
fetch-emailid-resp = "EMAILID" SP "(" objectid ")"
fetch-threadid-resp = "THREADID" SP ("(" objectid ")" / nil)
Namespace-Response = "NAMESPACE" SP Namespace SP Namespace SP Namespace
esearch-response = "ESEARCH" [search-correlator] [SP "UID"] *(SP search-return-data)
Namespace = nil / "(" 1*Namespace-Descr ")"
search-correlator = SP "(" "TAG" SP tag-string ")"
search-return-data = search-modifier-name SP search-return-value
Namespace-Descr = "(" rfc3501-STRING SP (DQUOTE QUOTED-CHAR DQUOTE / nil) *(Namespace-Response-Extension) ")"
tag-string = rfc3501-STRING
search-modifier-name = tagged-ext-label
search-return-value = tagged-ext-val
Namespace-Response-Extension = SP rfc3501-STRING SP "(" rfc3501-STRING *(SP rfc3501-STRING) ")"
tagged-ext-label = tagged-label-fchar *tagged-label-char
tagged-ext-val = tagged-ext-simple / "(" [tagged-ext-comp] ")"
tagged-label-fchar = ALPHA / "-" / "_" / "."
tagged-label-char = tagged-label-fchar / DIGIT / ":"
tagged-ext-simple = sequence-set / number
tagged-ext-comp = astring / tagged-ext-comp *(SP tagged-ext-comp) / "(" tagged-ext-comp ")"