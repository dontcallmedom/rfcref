authority = [userinfo "@"] host [":" port]
dec-octet = DIGIT / %x31-39 DIGIT / "1" 2DIGIT / "2" %x30-34 DIGIT / "25" %x30-35
fragment = *(pchar / "/" / "?")
h16 = 1*4HEXDIG
hier-part = "//" authority path-abempty / path-absolute / path-rootless / path-empty
host = IP-literal / IPv4address / reg-name
IP-literal = "[" (IPv6address / IPvFuture) "]"
IPv4address = dec-octet "." dec-octet "." dec-octet "." dec-octet
IPv6address = 6(h16 ":") ls32 / "::" 5(h16 ":") ls32 / [h16] "::" 4(h16 ":") ls32 / [[(h16 ":")] h16] "::" 3(h16 ":") ls32 / [*2(h16 ":") h16] "::" 2(h16 ":") ls32 / [*3(h16 ":") h16] "::" h16 ":" ls32 / [*4(h16 ":") h16] "::" ls32 / [*5(h16 ":") h16] "::" h16 / [*6(h16 ":") h16] "::"
IPvFuture = "v" 1*HEXDIG "." 1*(unreserved / sub-delims / ":")
ls32 = (h16 ":" h16) / IPv4address
path-abempty = *("/" segment)
path-absolute = "/" [segment-nz *("/" segment)]
path-empty = 0<pchar>
path-noscheme = segment-nz-nc *("/" segment)
path-rootless = segment-nz *("/" segment)
pchar = unreserved / pct-encoded / sub-delims / ":" / "@"
pct-encoded = "%" HEXDIG HEXDIG
port = *DIGIT
query = *(pchar / "/" / "?")
reg-name = *(unreserved / pct-encoded / sub-delims)
relative-part = "//" authority path-abempty / path-absolute / path-noscheme / path-empty
relative-ref = relative-part ["?" query] ["#" fragment]
scheme = ALPHA *(ALPHA / DIGIT / "+" / "-" / ".")
segment = *pchar
segment-nz = 1*pchar
segment-nz-nc = 1*(unreserved / pct-encoded / sub-delims / "@")
sub-delims = "!" / "$" / "&" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "="
unreserved = ALPHA / DIGIT / "-" / "." / "_" / "~"
URI = scheme ":" hier-part ["?" query] ["#" fragment]
URI-reference = URI / relative-ref
userinfo = *(unreserved / pct-encoded / sub-delims / ":")
addr-spec = local-part "@" domain
atext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "+" / "-" / "/" / "=" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"
atom = [CFWS] 1*atext [CFWS]
ccontent = ctext / quoted-pair / comment
CFWS = *([FWS] comment) (([FWS] comment) / FWS)
comment = "(" *([FWS] ccontent) [FWS] ")"
ctext = NO-WS-CTL / %d33-39 / %d42-91 / %d93-126
dcontent = dtext / quoted-pair
domain = dot-atom / domain-literal / obs-domain
domain-literal = [CFWS] "[" *([FWS] dcontent) [FWS] "]" [CFWS]
dot-atom = [CFWS] dot-atom-text [CFWS]
dot-atom-text = 1*atext *("." 1*atext)
dtext = NO-WS-CTL / %d33-90 / %d94-126
FWS = ([*WSP CRLF] 1*WSP) / obs-FWS
local-part = dot-atom / quoted-string / obs-local-part
NO-WS-CTL = %d1-8 / %d11 / %d12 / %d14-31 / %d127
obs-char = %d0-9 / %d11 / %d12 / %d14-127
obs-domain = atom *("." atom)
obs-FWS = 1*WSP *(CRLF 1*WSP)
obs-local-part = word *("." word)
obs-qp = "\" (%d0-127)
obs-text = *LF *CR *(obs-char *LF *CR)
qcontent = qtext / quoted-pair
qtext = NO-WS-CTL / %d33 / %d35-91 / %d93-126
quoted-pair = ("\" text) / obs-qp
quoted-string = [CFWS] DQUOTE *([FWS] qcontent) [FWS] DQUOTE [CFWS]
text = %d1-9 / %d11 / %d12 / %d14-127 / obs-text
word = atom / quoted-string
token = 1*(token-char)
token-char = %d33 / %x23-27 / %x2a-2b / %x2d-2e / %x30-39 / %x41-5a / %x5e-7e
group-attribute = "a=group:" semantics *(SP identification-tag)
identification-tag = token
mid-attribute = "a=mid:" identification-tag
semantics = "LS" / "FID" / semantics-extension
semantics-extension = token