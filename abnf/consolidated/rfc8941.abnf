absolute-URI = scheme ":" hier-part ["?" query]
authority = [userinfo "@"] URI-HOST [":" port]
dec-octet = DIGIT / %x31-39 DIGIT / "1" 2DIGIT / "2" %x30-34 DIGIT / "25" %x30-35
fragment = *(pchar / "/" / "?")
h16 = 1*4HEXDIG
hier-part = "//" authority path-abempty / path-absolute / path-rootless / path-empty
IP-literal = "[" (IPv6address / IPvFuture) "]"
IPv4address = dec-octet "." dec-octet "." dec-octet "." dec-octet
IPv6address = 6(h16 ":") ls32 / "::" 5(h16 ":") ls32 / [h16] "::" 4(h16 ":") ls32 / [[(h16 ":")] h16] "::" 3(h16 ":") ls32 / [*2(h16 ":") h16] "::" 2(h16 ":") ls32 / [*3(h16 ":") h16] "::" h16 ":" ls32 / [*4(h16 ":") h16] "::" ls32 / [*5(h16 ":") h16] "::" h16 / [*6(h16 ":") h16] "::"
IPvFuture = "v" 1*HEXDIG "." 1*(unreserved / sub-delims / ":")
ls32 = (h16 ":" h16) / IPv4address
path-abempty = *("/" segment)
path-absolute = "/" [segment-nz *("/" segment)]
path-empty = 0<pchar>
path-noscheme = segment-nz-nc *("/" segment)
path-rootless = segment-nz *("/" segment)
pchar = unreserved / pct-encoded / sub-delims / ":" / "@"
pct-encoded = "%" HEXDIG HEXDIG
port = *DIGIT
query = *(pchar / "/" / "?")
reg-name = *(unreserved / pct-encoded / sub-delims)
relative-part = "//" authority path-abempty / path-absolute / path-noscheme / path-empty
relative-ref = relative-part ["?" query] ["#" fragment]
scheme = ALPHA *(ALPHA / DIGIT / "+" / "-" / ".")
segment = *pchar
segment-nz = 1*pchar
segment-nz-nc = 1*(unreserved / pct-encoded / sub-delims / "@")
sub-delims = "!" / "$" / "&" / "'" / "(" / ")" / "*" / "+" / "," / ";" / "="
unreserved = ALPHA / DIGIT / "-" / "." / "_" / "~"
URI = scheme ":" hier-part ["?" query] ["#" fragment]
URI-reference = URI / relative-ref
userinfo = *(unreserved / pct-encoded / sub-delims / ":")
URI-HOST = IP-literal / IPv4address / reg-name
OWS = *(SP / HTAB)
tchar = "!" / "#" / "$" / "%" / "&" / "'" / "*" / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~" / DIGIT / ALPHA
bare-item = sf-integer / sf-decimal / sf-string / sf-token / sf-binary / sf-boolean
base64 = ALPHA / DIGIT / "+" / "/" / "="
boolean = "0" / "1"
chr = unescaped / escaped
dict-member = member-key (parameters / ("=" member-value))
escaped = "\" (DQUOTE / "\")
inner-list = "(" *SP [sf-item *(1*SP sf-item) *SP] ")" parameters
key = (lcalpha / "*") *(lcalpha / DIGIT / "_" / "-" / "." / "*")
lcalpha = %x61-7a
list-member = sf-item / inner-list
member-key = key
member-value = sf-item / inner-list
param-key = key
param-value = bare-item
parameter = param-key ["=" param-value]
parameters = *(";" *SP parameter)
sf-binary = ":" *(base64) ":"
sf-boolean = "?" boolean
sf-decimal = ["-"] 1*12DIGIT "." 1*3DIGIT
sf-dictionary = dict-member *(OWS "," OWS dict-member)
sf-integer = ["-"] 1*15DIGIT
sf-item = bare-item parameters
sf-list = list-member *(OWS "," OWS list-member)
sf-string = DQUOTE *chr DQUOTE
sf-token = (ALPHA / "*") *(tchar / ":" / "/")
unescaped = %x20-21 / %x23-5b / %x5d-7e